#Использовать "../src"
#Использовать asserts

Перем ЮнитТест;
Перем ТокенАвторизации;
Перем МассивВременныхФайлов;
Перем РаботаетПоискФайлов;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	ЮнитТест = Тестирование;	
	
	ИменаТестов = Новый Массив;
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПравельноеСлово");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьНеправельноеСлово");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьНеправельноеСловоВДругойРаскладке");

	ИменаТестов.Добавить("ТестДолжен_ПроверитьВыводПодсказокСтрокой");
	
	Возврат ИменаТестов;
	
КонецФункции // ПолучитьСписокТестов()

Процедура ПередЗапускомТеста() Экспорт
	
	
КонецПроцедуры // ПередЗапускомТеста()

Процедура ПослеЗапускаТеста() Экспорт
	
	
КонецПроцедуры // ПослеЗапускаТеста()

Процедура ТестДолжен_ПроверитьПравельноеСлово() Экспорт
	
	Спел = Новый Yaspeller();
	МассивОшибок = Спел.ПроверитьТекст("Привет");
	
	Утверждения.Проверить(ТипЗнч(МассивОшибок) = Тип("Массив"), "Ошибка проверки типа возвращаемых данных");
	Утверждения.Проверить(МассивОшибок.Количество() = 0, "Ошибка проверки неправельного слова");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьНеправельноеСлово() Экспорт
	
	Спел = Новый Yaspeller();
	МассивОшибок = Спел.ПроверитьТекст("Превет");
	
	
	Утверждения.Проверить(ТипЗнч(МассивОшибок) = Тип("Массив"), "Ошибка проверки типа возвращаемых данных");	
	Утверждения.Проверить(МассивОшибок.Количество() = 1, "Ошибка проверки неправельного слова");
	
	Ошибка = МассивОшибок[0];
	Утверждения.Проверить(Ошибка.Подсказки.Количество() = 3, "Ошибка проверки количества подсказок");
	Утверждения.Проверить(Ошибка.Подсказки[0] = "Привет", "Ошибка проверки результата подсказки");
	
	Ошибка = МассивОшибок[0];
	
	Утверждения.Проверить(Ошибка.КодОшибки = 1, "Нерпавельное значение Кода ошибки");
	Утверждения.Проверить(Ошибка.Позиция = 0, "Неправельное значение позиции ошибочного слова");
	Утверждения.Проверить(Ошибка.Строка = 0, "Неправельное значение номера строки ошибочного слова");
	Утверждения.Проверить(Ошибка.Столбец = 0, "Неправельное значение номера столбца ошибочного слова");
	Утверждения.Проверить(Ошибка.Длина = 6, "Неправельное значение длины ошибочного слова");
	Утверждения.Проверить(Ошибка.ИсходноеСлово = "Превет", "Неправельное исходное значение ошибочного слова");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьНеправельноеСловоВДругойРаскладке() Экспорт
	
	Спел = Новый Yaspeller();
	МассивОшибок = Спел.ПроверитьТекст("Plhfcndeqnt");
	
	
	Утверждения.Проверить(ТипЗнч(МассивОшибок) = Тип("Массив"), "Ошибка проверки типа возвращаемых данных");	
	Утверждения.Проверить(МассивОшибок.Количество() = 1, "Ошибка проверки неправельного слова");
	
	Ошибка = МассивОшибок[0];
	Утверждения.Проверить(Ошибка.Подсказки.Количество() = 4, "Ошибка проверки количества подсказок");
	Утверждения.Проверить(Ошибка.Подсказки[0] = "Здравствуйте", "Ошибка проверки результата подсказки");
	
	Ошибка = МассивОшибок[0];
	
	Утверждения.Проверить(Ошибка.КодОшибки = 1, "Нерпавельное значение Кода ошибки");
	Утверждения.Проверить(Ошибка.Позиция = 0, "Неправельное значение позиции ошибочного слова");
	Утверждения.Проверить(Ошибка.Строка = 0, "Неправельное значение номера строки ошибочного слова");
	Утверждения.Проверить(Ошибка.Столбец = 0, "Неправельное значение номера столбца ошибочного слова");
	Утверждения.Проверить(Ошибка.Длина = 11, "Неправельное значение длины ошибочного слова");
	Утверждения.Проверить(Ошибка.ИсходноеСлово = "Plhfcndeqnt", "Неправельное исходное значение ошибочного слова");
	
КонецПроцедуры


Процедура ТестДолжен_ПроверитьВыводПодсказокСтрокой() Экспорт

	МассивСлов = Новый Массив;
	МассивСлов.Добавить("Здравствуйте");
	МассивСлов.Добавить("Здраствуйте");
	МассивСлов.Добавить("Здрасвуйте");
	МассивСлов.Добавить("Зраствуйте");

	Данные = Новый Структура;
	Данные.Вставить("code", 1);
	Данные.Вставить("pos", 0);
	Данные.Вставить("row", 0);
	Данные.Вставить("col", 0);
	Данные.Вставить("len", 11);
	Данные.Вставить("word", "Plhfcndeqnt");
	Данные.Вставить("s", МассивСлов);

	РезультатПроверки = Новый SpellResult(Данные);

	Строка = РезультатПроверки.ПодсказкиСтрокой();
	Утверждения.Проверить(Строка = "Здравствуйте,Здраствуйте,Здрасвуйте,Зраствуйте", 
							"Нерпавельное значение результата метода ПодсказкиСтрокой");

КонецПроцедуры